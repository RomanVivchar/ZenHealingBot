from aiogram.utils.keyboard import (
    InlineKeyboardBuilder,
    InlineKeyboardButton,
    InlineKeyboardMarkup,
)

from ..states.states import (
    EXCLUSIVE_OPTIONS,
    SYMPTOM_OPTIONS,
    SymptomCallback,
    SymptomDoneCallback,
)


def buy_guide_keyboard(url: str, button_text: str = "–ö—É–ø–∏—Ç—å PDF"):
    builder = InlineKeyboardBuilder()
    builder.button(text=button_text, url=url)
    return builder.as_markup()


def build_symptoms_keyboard(selected_keys: list[str]) -> InlineKeyboardBuilder:

    builder = InlineKeyboardBuilder()

    for key, text in SYMPTOM_OPTIONS.items():

        button_text = f"{'‚úÖ ' if key in selected_keys else ' '}{text}"
        builder.button(text=button_text, callback_data=SymptomCallback(key=key))

    builder.button(text="–ì–æ—Ç–æ–≤–æ", callback_data=SymptomDoneCallback())

    builder.adjust(1)
    return builder.as_markup()


start_keyboard = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(
                text="–ü—Ä–æ–π—Ç–∏ –º–∏–Ω–∏-–¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É", callback_data="diagnostics"
            )
        ],
        [InlineKeyboardButton(text="–°–∫–∞—á–∞—Ç—å –≥–∞–π–¥", callback_data="free_guide")],
        [
            InlineKeyboardButton(
                text="–û –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏", callback_data="about_consultation"
            )
        ],
        [InlineKeyboardButton(text="–ü—Ä–æ—Å—Ç–æ –ø–æ—á–∏—Ç–∞—Ç—å", callback_data="just_read")],
    ]
)


energy_morning_kb = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="–ü–æ—á—Ç–∏ –≤—Å–µ–≥–¥–∞", callback_data="–í—Å–µ–≥–¥–∞")],
        [InlineKeyboardButton(text="–ò–Ω–æ–≥–¥–∞", callback_data="–ò–Ω–æ–≥–¥–∞")],
        [InlineKeyboardButton(text="–ü–æ—á—Ç–∏ –Ω–∏–∫–æ–≥–¥–∞", callback_data="–ù–∏–∫–æ–≥–¥–∞")],
    ]
)

breakfast_kb = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="–¢–æ–ª—å–∫–æ –∫–æ—Ñ–µ / –Ω–∏—á–µ–≥–æ", callback_data="–ù–µ–∑–∞–≤—Ç—Ä–∞–∫")],
        [
            InlineKeyboardButton(
                text="–°–ª–∞–¥–∫–∞—è –≤—ã–ø–µ—á–∫–∞ / –±—É—Ç–µ—Ä–±—Ä–æ–¥—ã", callback_data="–ü–µ—Ä–µ–∫—É—Å"
            )
        ],
        [
            InlineKeyboardButton(
                text="–ü–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π –∑–∞–≤—Ç—Ä–∞–∫", callback_data="–ü–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π –∑–∞–≤—Ç—Ä–∞–∫"
            )
        ],
    ]
)

intention_kb = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="–í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —ç–Ω–µ—Ä–≥–∏—é", callback_data="–≠–Ω–µ—Ä–≥–∏—è")],
        [InlineKeyboardButton(text="–ü–µ—Ä–µ—Å—Ç–∞—Ç—å –ø–µ—Ä–µ–µ–¥–∞—Ç—å", callback_data="–ü–µ—Ä–µ–µ–¥–∞–Ω–∏–µ")],
        [InlineKeyboardButton(text="–í—ã—Å—Ç—Ä–æ–∏—Ç—å –∑–∞–≤—Ç—Ä–∞–∫", callback_data="–ó–∞–≤—Ç—Ä–∞–∫")],
        [
            InlineKeyboardButton(
                text="–†–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å –¥–µ—Ñ–∏—Ü–∏—Ç–∞–º–∏", callback_data="–î–µ—Ñ–∏—Ü–∏—Ç—ã"
            )
        ],
        [
            InlineKeyboardButton(
                text="–ü—Ä–æ—Å—Ç–æ –ø–æ—á–∏—Ç–∞—Ç—å / –ø–æ–∫–∞ –Ω–µ –∑–Ω–∞—é", callback_data="–ù–µ–∑–Ω–∞—é"
            )
        ],
    ]
)


def build_scenario_deficits_keyboard():
    # * –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–¥–∞—á–∏ –≥–∞–π–¥–∞ "–ü–∏—Ç–∞–Ω–∏–µ –ø—Ä–∏ –¥–µ—Ñ–∏—Ü–∏—Ç–∞—Ö"
    builder = InlineKeyboardBuilder()
    builder.button(text="üì• –ü–æ–ª—É—á–∏—Ç—å –≥–∞–π–¥", callback_data="deficit_guide")
    builder.button(
        text="üóì –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é", callback_data="about_consultation"
    )
    builder.button(text="üîÅ –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="main_menu")

    builder.adjust(1)

    return builder.as_markup()


def build_scenario_consultation_keyboard():
    # * –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
    builder = InlineKeyboardBuilder()
    builder.button(
        text="–ß—Ç–æ –≤—Ö–æ–¥–∏—Ç –≤ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é‚ùî", callback_data="about_consultation"
    )
    builder.button(
        text="üóì –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é", callback_data="https://t.me/sharkova"
    )  # TODO: –¥–æ–±–∞–≤–∏—Ç—å —Ç–≥—à–∫—É
    builder.button(text="üîÅ –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="main_menu")

    builder.adjust(1)

    return builder.as_markup()


def build_scenario_overeating_keyboard():
    # * –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–¥–∞—á–∏ –≥–∞–π–¥–∞ "–ö–∞–∫ –ø–µ—Ä–µ—Å—Ç–∞—Ç—å –ø–µ—Ä–µ–µ–¥–∞—Ç—å –≤–µ—á–µ—Ä–æ–º"
    builder = InlineKeyboardBuilder()
    builder.button(text="üì• –ü–æ–ª—É—á–∏—Ç—å –≥–∞–π–¥", callback_data="overeating_guide")
    builder.button(
        text="üóì –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é", callback_data="about_consultation"
    )
    builder.button(text="üîÅ –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="main_menu")

    builder.adjust(1)

    return builder.as_markup()


def build_scenario_breakfast_keyboard():
    # * –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–¥–∞—á–∏ –≥–∞–π–¥–∞ "–ó–∞–≤—Ç—Ä–∞–∫ –±–µ–∑ —Ö–∞–æ—Å–∞"
    builder = InlineKeyboardBuilder()
    builder.button(text="üì• –ü–æ–ª—É—á–∏—Ç—å –≥–∞–π–¥", callback_data="breakfast_guide")
    builder.button(
        text="üóì –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é", callback_data="about_consultation"
    )
    builder.button(text="üîÅ –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="main_menu")

    builder.adjust(1)

    return builder.as_markup()


def build_book_consultation_keyboard():
    # * –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
    builder = InlineKeyboardBuilder()
    builder.button(
        text="üóì –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é", callback_data="https://t.me/sharkova"
    )  # TODO: –¥–æ–±–∞–≤–∏—Ç—å —Ç–≥—à–∫—É
    builder.button(text="üîÅ –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="main_menu")

    builder.adjust(1)

    return builder.as_markup()
